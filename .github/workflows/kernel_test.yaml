name: "Delta Kernel"

on: [push, pull_request]

# Cancel previous runs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # Point SBT to our cache directories for consistency
  SBT_OPTS: "-Dsbt.coursier.home-dir=/home/runner/.cache/coursier -Dsbt.ivy.home=/home/runner/.ivy2"

jobs:
  test:
    name: "DK: Shard ${{ matrix.shard }}"
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false # Allow all shards to run even if one fails
      matrix:
        shard: [0, 1, 2, 3]
    env:
      SCALA_VERSION: 2.13.13
      NUM_SHARDS: 4
      DISABLE_UNIDOC: true # Another unidoc workflow will test unidoc.
      TEST_PARALLELISM_COUNT: 4
    steps:
      - name: Show runner specs
        run: |
          echo "=== GitHub Runner Specs ==="
          echo "CPU cores: $(nproc)"
          echo "CPU info: $(lscpu | grep 'Model name' | cut -d':' -f2 | xargs)"
          echo "Total RAM: $(free -h | grep '^Mem:' | awk '{print $2}')"
          echo "Available RAM: $(free -h | grep '^Mem:' | awk '{print $7}')"
          echo "Disk space: $(df -h / | tail -1 | awk '{print $2 " total, " $4 " available"}')"
          echo "Runner OS: ${{ runner.os }}"
          echo "Runner arch: ${{ runner.arch }}"
      - name: Checkout code
        uses: actions/checkout@v4
      - name: install java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Cache SBT and dependencies
        id: cache-sbt
        uses: actions/cache@v4
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache
            ~/.cache/coursier
          key: sbt-kernel-${{ runner.os }}-scala${{ env.SCALA_VERSION }}
      - name: Check cache status
        run: |
          if [ "${{ steps.cache-sbt.outputs.cache-hit }}" == "true" ]; then
            echo "✅ Cache HIT - using cached dependencies"
          else
            echo "❌ Cache MISS - will download dependencies"
          fi
      - name: Run tests
        run: |
          python run-tests.py --group kernel --coverage --shard ${{ matrix.shard }}

  integration-test:
    name: "DK: Integration"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - name: install java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Run integration tests
        run: |
          cd kernel/examples && python run-kernel-examples.py --use-local
